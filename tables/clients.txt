-- Table: public.clients

-- DROP TABLE IF EXISTS public.clients;

CREATE TABLE IF NOT EXISTS public.clients
(
    id text COLLATE pg_catalog."default" NOT NULL,
    "userId" text COLLATE pg_catalog."default" NOT NULL,
    "planId" text COLLATE pg_catalog."default",
    name text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    "phoneNumber" text COLLATE pg_catalog."default" NOT NULL,
    cpf text COLLATE pg_catalog."default" NOT NULL,
    gender text COLLATE pg_catalog."default",
    "birthDate" timestamp(3) without time zone,
    "createdAt" timestamp(3) without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp(3) without time zone,
    CONSTRAINT clients_pkey PRIMARY KEY (id),
    CONSTRAINT "clients_planId_fkey" FOREIGN KEY ("planId")
        REFERENCES public.plan (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE SET NULL,
    CONSTRAINT "clients_userId_fkey" FOREIGN KEY ("userId")
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.clients
    OWNER to avnadmin;
-- Index: clients_cpf_key

-- DROP INDEX IF EXISTS public.clients_cpf_key;

CREATE UNIQUE INDEX IF NOT EXISTS clients_cpf_key
    ON public.clients USING btree
    (cpf COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: clients_email_key

-- DROP INDEX IF EXISTS public.clients_email_key;

CREATE UNIQUE INDEX IF NOT EXISTS clients_email_key
    ON public.clients USING btree
    (email COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;